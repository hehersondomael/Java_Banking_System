/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hehersondomael.java_banking_system;

import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Heherson Domael
 */
public class ClientCredentials extends javax.swing.JInternalFrame {

    MY_CONNECTION my_connection = new MY_CONNECTION();
    Color whiteColor = new Color(255,255,255);
    Color grayColor = new Color(204,204,204);

    /**
     * Creates new form Customer
     */
    public ClientCredentials() {
        initComponents();
        FillClientTable(jTableClient);
        //jTextFieldHomeAddress.setEnabled(false);
        // jLabelSourceAccountIDNotFound.setForeground(redColor);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTheHBankText = new javax.swing.JLabel();
        jLabelBanking = new javax.swing.JLabel();
        jLabelManagement = new javax.swing.JLabel();
        jLabelSystem = new javax.swing.JLabel();
        jLabelBanking1 = new javax.swing.JLabel();
        jLabelManagement1 = new javax.swing.JLabel();
        jLabelSystem1 = new javax.swing.JLabel();
        jPanelClientCredentials = new javax.swing.JPanel();
        jLabelClientID = new javax.swing.JLabel();
        jTextFieldClientID = new javax.swing.JTextField();
        jTextFieldLastName = new javax.swing.JTextField();
        jLabelLastName = new javax.swing.JLabel();
        jLabelFirstName = new javax.swing.JLabel();
        jLabelGenderAtBirth = new javax.swing.JLabel();
        jLabelMiddleName = new javax.swing.JLabel();
        jLabelDateOfBirth = new javax.swing.JLabel();
        jLabelCivilStatus = new javax.swing.JLabel();
        jLabelHomeAddress = new javax.swing.JLabel();
        jLabelMobileNo = new javax.swing.JLabel();
        jLabelEmail = new javax.swing.JLabel();
        jTextFieldFirstName = new javax.swing.JTextField();
        jTextFieldMiddleName = new javax.swing.JTextField();
        jComboBoxGenderAtBirth = new javax.swing.JComboBox<>();
        jComboBoxCivilStatus = new javax.swing.JComboBox<>();
        jButtonModify = new javax.swing.JButton();
        jDateChooserDateOfBirth = new com.toedter.calendar.JDateChooser();
        jLabelBranch = new javax.swing.JLabel();
        jButtonBack = new javax.swing.JButton();
        jTextFieldHomeAddress = new javax.swing.JTextField();
        jTextFieldMobileNo = new javax.swing.JTextField();
        jTextFieldEmail = new javax.swing.JTextField();
        jComboBoxBranch = new javax.swing.JComboBox<>();
        jButtonEdit = new javax.swing.JButton();
        jButtonExit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableClient = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabelTheHBankText1 = new javax.swing.JLabel();
        jLabelBanking2 = new javax.swing.JLabel();
        jLabelManagement2 = new javax.swing.JLabel();
        jLabelSystem2 = new javax.swing.JLabel();
        jButtonRefreshData = new javax.swing.JButton();

        jLabelTheHBankText.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelTheHBankText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTheHBankText.setText("THE H BANK");

        jLabelBanking.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabelBanking.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelBanking.setText("BANKING");

        jLabelManagement.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabelManagement.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelManagement.setText("MANAGEMENT");

        jLabelSystem.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabelSystem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSystem.setText("SYSTEM");

        jLabelBanking1.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabelBanking1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelBanking1.setText("BANKING");

        jLabelManagement1.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabelManagement1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelManagement1.setText("MANAGEMENT");

        jLabelSystem1.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabelSystem1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSystem1.setText("SYSTEM");

        setMinimumSize(new java.awt.Dimension(1051, 571));
        setPreferredSize(new java.awt.Dimension(1051, 571));

        jPanelClientCredentials.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Client Credentials", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N

        jLabelClientID.setText("Client ID:");

        jTextFieldClientID.setEditable(false);
        jTextFieldClientID.setBackground(new java.awt.Color(204, 204, 204));
        jTextFieldClientID.setFocusable(false);

        jTextFieldLastName.setBackground(new java.awt.Color(204, 204, 204));
        jTextFieldLastName.setFocusable(false);

        jLabelLastName.setText("Last Name:");

        jLabelFirstName.setText("First Name:");

        jLabelGenderAtBirth.setText("Gender at Birth:");

        jLabelMiddleName.setText("Middle Name:");

        jLabelDateOfBirth.setText("Date of Birth:");

        jLabelCivilStatus.setText("Civil Status:");

        jLabelHomeAddress.setText("Home Address:");

        jLabelMobileNo.setText("Mobile No.:");

        jLabelEmail.setText("Email:");

        jTextFieldFirstName.setBackground(new java.awt.Color(204, 204, 204));
        jTextFieldFirstName.setFocusable(false);

        jTextFieldMiddleName.setBackground(new java.awt.Color(204, 204, 204));
        jTextFieldMiddleName.setFocusable(false);

        jComboBoxGenderAtBirth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        jComboBoxGenderAtBirth.setSelectedIndex(-1);
        jComboBoxGenderAtBirth.setEnabled(false);
        jComboBoxGenderAtBirth.setFocusable(false);
        jComboBoxGenderAtBirth.setOpaque(false);

        jComboBoxCivilStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Single", "Married", "Separated", "Divorced", "Widowed" }));
        jComboBoxCivilStatus.setSelectedIndex(-1);
        jComboBoxCivilStatus.setEnabled(false);
        jComboBoxCivilStatus.setFocusable(false);

        jButtonModify.setText("Modify");
        jButtonModify.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonModify.setEnabled(false);
        jButtonModify.setFocusable(false);
        jButtonModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifyActionPerformed(evt);
            }
        });

        jDateChooserDateOfBirth.setEnabled(false);

        jLabelBranch.setText("Branch:");

        jButtonBack.setText("Back");
        jButtonBack.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonBack.setEnabled(false);
        jButtonBack.setFocusable(false);
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        jTextFieldHomeAddress.setBackground(new java.awt.Color(204, 204, 204));
        jTextFieldHomeAddress.setFocusable(false);

        jTextFieldMobileNo.setBackground(new java.awt.Color(204, 204, 204));
        jTextFieldMobileNo.setFocusable(false);

        jTextFieldEmail.setBackground(new java.awt.Color(204, 204, 204));
        jTextFieldEmail.setFocusable(false);

        jComboBoxBranch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Manila", "Makati", "Muntinlupa", "Pasig", "Quezon City", "San Juan", "Taguig" }));
        jComboBoxBranch.setSelectedIndex(-1);
        jComboBoxBranch.setEnabled(false);
        jComboBoxBranch.setFocusable(false);

        jButtonEdit.setText("Edit");
        jButtonEdit.setEnabled(false);
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });

        jButtonExit.setText("Exit");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelClientCredentialsLayout = new javax.swing.GroupLayout(jPanelClientCredentials);
        jPanelClientCredentials.setLayout(jPanelClientCredentialsLayout);
        jPanelClientCredentialsLayout.setHorizontalGroup(
            jPanelClientCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelClientCredentialsLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanelClientCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelClientCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanelClientCredentialsLayout.createSequentialGroup()
                            .addGroup(jPanelClientCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanelClientCredentialsLayout.createSequentialGroup()
                                    .addGroup(jPanelClientCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabelDateOfBirth, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabelCivilStatus, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addGap(30, 30, 30))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelClientCredentialsLayout.createSequentialGroup()
                                    .addComponent(jLabelGenderAtBirth)
                                    .addGap(18, 18, 18)))
                            .addGroup(jPanelClientCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jDateChooserDateOfBirth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBoxGenderAtBirth, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBoxCivilStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanelClientCredentialsLayout.createSequentialGroup()
                            .addGroup(jPanelClientCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabelMiddleName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelFirstName)
                                .addComponent(jLabelClientID)
                                .addComponent(jLabelLastName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(29, 29, 29)
                            .addGroup(jPanelClientCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanelClientCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldFirstName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldLastName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldClientID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jTextFieldMiddleName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanelClientCredentialsLayout.createSequentialGroup()
                        .addGroup(jPanelClientCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelEmail)
                            .addComponent(jLabelHomeAddress)
                            .addComponent(jLabelMobileNo)
                            .addComponent(jLabelBranch))
                        .addGap(22, 22, 22)
                        .addGroup(jPanelClientCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelClientCredentialsLayout.createSequentialGroup()
                                .addComponent(jButtonEdit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonModify, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonBack)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextFieldHomeAddress)
                            .addComponent(jTextFieldMobileNo)
                            .addComponent(jTextFieldEmail)
                            .addComponent(jComboBoxBranch, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        jPanelClientCredentialsLayout.setVerticalGroup(
            jPanelClientCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelClientCredentialsLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jPanelClientCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldClientID)
                    .addComponent(jLabelClientID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelClientCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldLastName)
                    .addComponent(jLabelLastName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelClientCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldFirstName)
                    .addComponent(jLabelFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelClientCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldMiddleName)
                    .addComponent(jLabelMiddleName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelClientCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBoxGenderAtBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelClientCredentialsLayout.createSequentialGroup()
                        .addComponent(jLabelGenderAtBirth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(3, 3, 3)))
                .addGap(6, 6, 6)
                .addGroup(jPanelClientCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDateChooserDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelClientCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBoxCivilStatus)
                    .addComponent(jLabelCivilStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelClientCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelHomeAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldHomeAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelClientCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMobileNo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldMobileNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelClientCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelClientCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelBranch, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxBranch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelClientCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonModify)
                    .addComponent(jButtonEdit)
                    .addComponent(jButtonBack)
                    .addComponent(jButtonExit))
                .addGap(33, 33, 33))
        );

        jTableClient.setAutoCreateRowSorter(true);
        jTableClient.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTableClient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Client ID", "Full Name", "Branch"
            }
        )

        // make the jTable cells not editable
        {
            Class[] types = { String.class, String.class, String.class};
            boolean[] canEdit = { false, false, false };

            @Override
            public Class getColumnClass(int columnIndex) {
                return this.types[columnIndex];
            }

            public boolean isCellEditable(int columnIndex) {
                return this.canEdit[columnIndex];
            }
        });
        jTableClient.setFocusable(false);
        jTableClient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableClientMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableClient);

        jLabel1.setText("Click a client below to edit their credentials on the left.");

        jLabelTheHBankText1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelTheHBankText1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTheHBankText1.setText("THE H BANK");

        jLabelBanking2.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabelBanking2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelBanking2.setText("BANKING");

        jLabelManagement2.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabelManagement2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelManagement2.setText("MANAGEMENT");

        jLabelSystem2.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabelSystem2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSystem2.setText("SYSTEM");

        jButtonRefreshData.setText("Refresh Data");
        jButtonRefreshData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jPanelClientCredentials, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonRefreshData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(jLabelTheHBankText1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelBanking2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelManagement2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelSystem2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(jLabel1)))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelTheHBankText1)
                            .addComponent(jLabelBanking2)
                            .addComponent(jLabelManagement2)
                            .addComponent(jLabelSystem2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonRefreshData)
                        .addGap(44, 44, 44))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelClientCredentials, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifyActionPerformed
        String clientID = jTextFieldClientID.getText();
        String lastName = jTextFieldLastName.getText();
        String firstName = jTextFieldFirstName.getText();
        String middleName = jTextFieldMiddleName.getText();
        String genderAtBirth = "";
        String civilStatus = "";
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String dateOfBirth = "";
        String homeAddress = jTextFieldHomeAddress.getText();
        String mobile = jTextFieldMobileNo.getText().trim();          
        String email = jTextFieldEmail.getText();
        String branch = "";

        boolean genderAtBirthPointer;
        boolean civilStatusPointer;
        boolean dateOfBirthPointer;
        boolean branchPointer;

        try {
            genderAtBirthPointer = false;
            genderAtBirth = jComboBoxGenderAtBirth.getSelectedItem().toString();
        } catch(NullPointerException ex) {
            genderAtBirthPointer = true;
        }
        try {
            civilStatusPointer = false;
            civilStatus = jComboBoxCivilStatus.getSelectedItem().toString();
        } catch(NullPointerException ex) {
            civilStatusPointer = true;
        }
        try {
            dateOfBirthPointer = false;
            dateOfBirth = dateFormat.format(jDateChooserDateOfBirth.getDate()).trim();
        } catch(NullPointerException ex) {
            dateOfBirthPointer = true;
        }
        try {
            branchPointer = false;
            branch = jComboBoxBranch.getSelectedItem().toString();
        } catch(NullPointerException ex) {
            branchPointer = true;
        }

        // Include NumericPointerException for Mobile No.

        if (jTextFieldClientID.getText().trim().equals(""))
            JOptionPane.showMessageDialog(rootPane, "Please select a client from the table.", "No client selected", JOptionPane.ERROR_MESSAGE);
        else if(jTextFieldLastName.getText().trim().equals("") || jTextFieldFirstName.getText().trim().equals("") ||
                jTextFieldMiddleName.getText().trim().equals("") || genderAtBirthPointer ||
                dateOfBirthPointer || civilStatusPointer || jTextFieldHomeAddress.getText().trim().equals("") ||
                jTextFieldMobileNo.getText().trim().equals("") || jTextFieldEmail.getText().trim().equals("") || branchPointer)
            JOptionPane.showMessageDialog(rootPane, "Please fill up the form completetely.", "All fields required", JOptionPane.ERROR_MESSAGE);
        else
        {
            long mobileNo = Long.valueOf(mobile);
            PreparedStatement ps;
            String editQuery = "UPDATE clients SET lastName=?,firstName=?,middleName=?,genderAtBirth=?,dateOfBirth=?,civilStatus=?,homeAddress=?,mobileNo=?,email=?,branch=? WHERE clientID=?";

            try {
                ps = my_connection.createConnection().prepareStatement(editQuery);
                ps.setString(1, lastName.trim());
                ps.setString(2, firstName.trim());
                ps.setString(3, middleName.trim());
                ps.setString(4, genderAtBirth.trim());
                ps.setString(5, dateOfBirth.trim());
                ps.setString(6, civilStatus.trim());
                ps.setString(7, homeAddress.trim());
                ps.setLong(8, mobileNo);
                ps.setString(9, email.trim());
                ps.setString(10, branch.trim());
                ps.setString(11, clientID.trim());

                if(ps.executeUpdate() > 0)
                {
                    JOptionPane.showMessageDialog(this, "Client edited successfully.");
                    ShowModifiedClientCredentials();
                }
                else
                    JOptionPane.showMessageDialog(this, "Client NOT edited successfully.");
            } catch (SQLException ex) {
                    Logger.getLogger(ClientCredentials.class.getName()).log(Level.SEVERE, null, ex);
              }
        }
    }//GEN-LAST:event_jButtonModifyActionPerformed

    private void jTableClientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClientMouseClicked
        if (jTextFieldClientID.getText().trim().equals(""))
            jButtonEdit.setEnabled(true);
        else
        {
            jButtonModify.setEnabled(false);
            jButtonBack.setEnabled(false);
            ShowModifiedClientCredentials();
        }

        DefaultTableModel model = (DefaultTableModel)jTableClient.getModel();
        int rIndex = jTableClient.convertRowIndexToModel(jTableClient.getSelectedRow());

        String clientID = model.getValueAt(rIndex,0).toString();

        try {
            PreparedStatement ps;
            ResultSet rs;
            String selectQuery = "SELECT * FROM clients WHERE clientID=?";

            ps = my_connection.createConnection().prepareStatement(selectQuery);
            ps.setString(1,clientID);
            rs = ps.executeQuery();
            rs.next();

            jTextFieldClientID.setText(clientID);
            jTextFieldLastName.setText(rs.getString("lastName").trim());
            jTextFieldFirstName.setText(rs.getString("firstName").trim());
            jTextFieldMiddleName.setText(rs.getString("middleName").trim());
            jComboBoxGenderAtBirth.setSelectedItem(rs.getString("genderAtBirth").trim());
            try {
                Date dateIn = new SimpleDateFormat("yyyy-MM-dd").parse(rs.getString("dateOfBirth"));
                jDateChooserDateOfBirth.setDate(dateIn);
            } catch (ParseException ex) {
                Logger.getLogger(ClientCredentials.class.getName()).log(Level.SEVERE, null, ex);
            }
            jComboBoxCivilStatus.setSelectedItem(rs.getString("civilStatus").trim());
            jTextFieldHomeAddress.setText(rs.getString("homeAddress").trim());
            jTextFieldMobileNo.setText(rs.getString("mobileNo").trim());
            jTextFieldEmail.setText(rs.getString("email").trim());
            jComboBoxBranch.setSelectedItem(rs.getString("branch").trim());
        } catch (SQLException ex) {
            Logger.getLogger(ClientCredentials.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTableClientMouseClicked

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        ShowModifiedClientCredentials();
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void jButtonRefreshDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshDataActionPerformed
        ShowModifiedClientCredentials();
        jButtonEdit.setEnabled(false);
        jTextFieldClientID.setText("");
        ClearFields();

        jTableClient.setModel(
                new javax.swing.table.DefaultTableModel(new Object [][] {},
                new String [] {"Client ID", "Full Name", "Branch"})
                {
                    Class[] types = { String.class, String.class, String.class};
                    boolean[] canEdit = { false, false, false };

                    @Override
                    public Class getColumnClass(int columnIndex) {
                        return this.types[columnIndex];
                    }

                    public boolean isCellEditable(int columnIndex) {
                        return this.canEdit[columnIndex];
                    }
                }
        );

        FillClientTable(jTableClient);
    }//GEN-LAST:event_jButtonRefreshDataActionPerformed

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        jTextFieldHomeAddress.setBackground(whiteColor);
        jTextFieldLastName.setBackground(whiteColor);
        jTextFieldFirstName.setBackground(whiteColor);
        jTextFieldMiddleName.setBackground(whiteColor);
        jTextFieldHomeAddress.setBackground(whiteColor);
        jTextFieldMobileNo.setBackground(whiteColor);
        jTextFieldEmail.setBackground(whiteColor);

        jTextFieldHomeAddress.setFocusable(true);
        jTextFieldLastName.setFocusable(true);
        jTextFieldFirstName.setFocusable(true);
        jTextFieldMiddleName.setFocusable(true);
        jTextFieldHomeAddress.setFocusable(true);
        jTextFieldMobileNo.setFocusable(true);
        jTextFieldEmail.setFocusable(true);

        jComboBoxGenderAtBirth.setEnabled(true);
        jDateChooserDateOfBirth.setEnabled(true);
        jComboBoxCivilStatus.setEnabled(true);
        jComboBoxBranch.setEnabled(true);
        
        jButtonEdit.setEnabled(false);
        jButtonModify.setEnabled(true);
        jButtonBack.setEnabled(true);
        
    }//GEN-LAST:event_jButtonEditActionPerformed

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
        if (JOptionPane.showConfirmDialog(null, "Are you sure you want to leave?", "Close Frame", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION)
        {
            setVisible(false);
            dispose();
        }
        else
            setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
    }//GEN-LAST:event_jButtonExitActionPerformed

    private void ClearFields()
    {
        jTextFieldLastName.setText("");
        jTextFieldFirstName.setText("");
        jTextFieldMiddleName.setText("");
        jComboBoxGenderAtBirth.setSelectedIndex(-1);
        jDateChooserDateOfBirth.setDate(null);
        jComboBoxCivilStatus.setSelectedIndex(-1);
        jTextFieldHomeAddress.setText("");
        jTextFieldMobileNo.setText("");
        jTextFieldEmail.setText("");
        jComboBoxBranch.setSelectedIndex(-1);
        jTextFieldLastName.requestFocus();    
    }

    private void FillClientTable(JTable jTable)
    {
        jTableClient.setFocusable(false);
        jTableClient.setRowSelectionAllowed(true);

        setJTableColumnsWidth(jTableClient,210,10,100,25);

        PreparedStatement ps;
        ResultSet rs;
        String selectQuery = "SELECT * FROM clients ORDER BY id DESC";

        try {
            ps = my_connection.createConnection().prepareStatement(selectQuery);
            rs = ps.executeQuery();

            DefaultTableModel tableModel = (DefaultTableModel)jTable.getModel();
            Object[] row;

            while(rs.next())
            {
                row = new Object[3];
                row[0] = rs.getString(2);
                row[1] = rs.getString(3) + ", " + rs.getString(4) + " " + rs.getString(5).substring(0,1) + ".";
                row[2] = rs.getString(12);

                tableModel.addRow(row);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ClientCredentials.class.getName()).log(Level.SEVERE, null, ex);
          }
    }
    
    private void ShowModifiedClientCredentials()
    {
        jTextFieldHomeAddress.setBackground(grayColor);
        jTextFieldLastName.setBackground(grayColor);
        jTextFieldFirstName.setBackground(grayColor);
        jTextFieldMiddleName.setBackground(grayColor);
        jTextFieldHomeAddress.setBackground(grayColor);
        jTextFieldMobileNo.setBackground(grayColor);
        jTextFieldEmail.setBackground(grayColor);

        jTextFieldHomeAddress.setFocusable(false);
        jTextFieldLastName.setFocusable(false);
        jTextFieldFirstName.setFocusable(false);
        jTextFieldMiddleName.setFocusable(false);
        jTextFieldHomeAddress.setFocusable(false);
        jTextFieldMobileNo.setFocusable(false);
        jTextFieldEmail.setFocusable(false);

        jComboBoxGenderAtBirth.setEnabled(false);
        jDateChooserDateOfBirth.setEnabled(false);
        jComboBoxCivilStatus.setEnabled(false);
        jComboBoxBranch.setEnabled(false);

        jButtonEdit.setEnabled(true);
        jButtonModify.setEnabled(false);
        jButtonBack.setEnabled(false);     
    }

    public static void setJTableColumnsWidth(JTable table, int tablePreferredWidth, double... percentages)
    {
        double total = 0;
        for (int i = 0; i < table.getColumnModel().getColumnCount(); i++) {
            total += percentages[i];
        }

        for (int i = 0; i < table.getColumnModel().getColumnCount(); i++) {
            TableColumn column = table.getColumnModel().getColumn(i);
            column.setPreferredWidth((int)
                    (tablePreferredWidth * (percentages[i] / total)));
        }
    }    
    
//    IN CASE COMBO BOX ITEMS ARE TO BE RETRIEVED IN THE DATABASE
//    public void GetBankBranches()
//    {
//        try {
//            PreparedStatement ps;
//            ResultSet rs;
//            String selectQuery = "SELECT * FROM branch";
//            ps = my_connection.createConnection().prepareStatement(selectQuery);
//            rs = ps.executeQuery();
//
//            while (rs.next())
//                jComboBoxBranch.addItem(rs.getString(2));
//        }  catch (SQLException ex) {
//            Logger.getLogger(Customer.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonModify;
    private javax.swing.JButton jButtonRefreshData;
    private javax.swing.JComboBox<String> jComboBoxBranch;
    private javax.swing.JComboBox<String> jComboBoxCivilStatus;
    private javax.swing.JComboBox<String> jComboBoxGenderAtBirth;
    private com.toedter.calendar.JDateChooser jDateChooserDateOfBirth;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelBanking;
    private javax.swing.JLabel jLabelBanking1;
    private javax.swing.JLabel jLabelBanking2;
    private javax.swing.JLabel jLabelBranch;
    private javax.swing.JLabel jLabelCivilStatus;
    private javax.swing.JLabel jLabelClientID;
    private javax.swing.JLabel jLabelDateOfBirth;
    private javax.swing.JLabel jLabelEmail;
    private javax.swing.JLabel jLabelFirstName;
    private javax.swing.JLabel jLabelGenderAtBirth;
    private javax.swing.JLabel jLabelHomeAddress;
    private javax.swing.JLabel jLabelLastName;
    private javax.swing.JLabel jLabelManagement;
    private javax.swing.JLabel jLabelManagement1;
    private javax.swing.JLabel jLabelManagement2;
    private javax.swing.JLabel jLabelMiddleName;
    private javax.swing.JLabel jLabelMobileNo;
    private javax.swing.JLabel jLabelSystem;
    private javax.swing.JLabel jLabelSystem1;
    private javax.swing.JLabel jLabelSystem2;
    private javax.swing.JLabel jLabelTheHBankText;
    private javax.swing.JLabel jLabelTheHBankText1;
    private javax.swing.JPanel jPanelClientCredentials;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableClient;
    private javax.swing.JTextField jTextFieldClientID;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldFirstName;
    private javax.swing.JTextField jTextFieldHomeAddress;
    private javax.swing.JTextField jTextFieldLastName;
    private javax.swing.JTextField jTextFieldMiddleName;
    private javax.swing.JTextField jTextFieldMobileNo;
    // End of variables declaration//GEN-END:variables
}
