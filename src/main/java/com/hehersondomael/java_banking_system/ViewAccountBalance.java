/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hehersondomael.java_banking_system;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;

/**
 *
 * @author Heherson Domael
 */
public class ViewAccountBalance extends javax.swing.JInternalFrame {

    MY_CONNECTION my_connection = new MY_CONNECTION();

    /**
     * Creates new form AddNewAccount
     */
    public ViewAccountBalance() {
        initComponents();
        FillAccountTable(jTableAccount);
        jLabelAccountTransactionLogAccountID.setText(" ");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTheHBankText1 = new javax.swing.JLabel();
        jLabelBanking2 = new javax.swing.JLabel();
        jLabelManagement2 = new javax.swing.JLabel();
        jLabelSystem2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableClient = new javax.swing.JTable();
        jButtonRefreshData = new javax.swing.JButton();
        jLabelTheHBankText3 = new javax.swing.JLabel();
        jLabelBanking4 = new javax.swing.JLabel();
        jLabelManagement4 = new javax.swing.JLabel();
        jLabelSystem4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableClient1 = new javax.swing.JTable();
        jPanelAddNewAccount = new javax.swing.JPanel();
        jLabelClientID = new javax.swing.JLabel();
        jLabelLastName = new javax.swing.JLabel();
        jLabelBalanceInPHP = new javax.swing.JLabel();
        jLabelAccountType = new javax.swing.JLabel();
        jComboBoxAccountType = new javax.swing.JComboBox<>();
        jLabelAccountID = new javax.swing.JLabel();
        jTextFieldBalanceInPHP = new javax.swing.JTextField();
        jTextFieldAccountID = new javax.swing.JTextField();
        jTextFieldClientID = new javax.swing.JTextField();
        jTextFieldFullName = new javax.swing.JTextField();
        jComboBoxGenderAtBirth = new javax.swing.JComboBox<>();
        jLabelGenderAtBirth = new javax.swing.JLabel();
        jLabelDateOfBirth = new javax.swing.JLabel();
        jDateChooserDateOfBirth = new com.toedter.calendar.JDateChooser();
        jLabelMobileNo = new javax.swing.JLabel();
        jTextFieldEmail = new javax.swing.JTextField();
        jLabelEmail = new javax.swing.JLabel();
        jTextFieldBranch = new javax.swing.JTextField();
        jLabelBranch2 = new javax.swing.JLabel();
        jTextFieldMobileNo = new javax.swing.JTextField();
        jButtonRefreshAllData = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableAccount = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabelSystem3 = new javax.swing.JLabel();
        jLabelManagement3 = new javax.swing.JLabel();
        jLabelBanking3 = new javax.swing.JLabel();
        jLabelTheHBankText2 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableAccountTransactionLog = new javax.swing.JTable();
        jLabelAccountTransactionLog = new javax.swing.JLabel();
        jLabelAccountTransactionLogAccountID = new javax.swing.JLabel();

        jLabelTheHBankText1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelTheHBankText1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTheHBankText1.setText("THE H BANK");

        jLabelBanking2.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabelBanking2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelBanking2.setText("BANKING");

        jLabelManagement2.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabelManagement2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelManagement2.setText("MANAGEMENT");

        jLabelSystem2.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabelSystem2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSystem2.setText("SYSTEM");

        jLabel1.setText("Click a client below to edit their credentials.");

        jTableClient.setAutoCreateRowSorter(true);
        jTableClient.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTableClient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Client ID", "Full Name", "Branch"
            }
        )

        // make the jTable cells not editable
        {
            Class[] types = { String.class, String.class, String.class};
            boolean[] canEdit = { false, false, false };

            @Override
            public Class getColumnClass(int columnIndex) {
                return this.types[columnIndex];
            }

            public boolean isCellEditable(int columnIndex) {
                return this.canEdit[columnIndex];
            }
        });
        jTableClient.setFocusable(false);
        jTableClient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableClientMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableClient);

        jButtonRefreshData.setText("Refresh Data");
        jButtonRefreshData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshDataActionPerformed(evt);
            }
        });

        jLabelTheHBankText3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelTheHBankText3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTheHBankText3.setText("THE H BANK");

        jLabelBanking4.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabelBanking4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelBanking4.setText("BANKING");

        jLabelManagement4.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabelManagement4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelManagement4.setText("MANAGEMENT");

        jLabelSystem4.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabelSystem4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSystem4.setText("SYSTEM");

        jLabel3.setText("Click a client below to edit their credentials.");

        jTableClient1.setAutoCreateRowSorter(true);
        jTableClient1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTableClient1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Client ID", "Full Name", "Branch"
            }
        )

        // make the jTable cells not editable
        {
            Class[] types = { String.class, String.class, String.class};
            boolean[] canEdit = { false, false, false };

            @Override
            public Class getColumnClass(int columnIndex) {
                return this.types[columnIndex];
            }

            public boolean isCellEditable(int columnIndex) {
                return this.canEdit[columnIndex];
            }
        });
        jTableClient1.setFocusable(false);
        jTableClient1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableClient1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableClient1);

        setMinimumSize(new java.awt.Dimension(1051, 571));
        setPreferredSize(new java.awt.Dimension(1051, 571));

        jPanelAddNewAccount.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "View Account Balance", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N
        jPanelAddNewAccount.setPreferredSize(new java.awt.Dimension(450, 429));

        jLabelClientID.setText("Client ID:");

        jLabelLastName.setText("Full Name:");

        jLabelBalanceInPHP.setText("Balance (in PHP):");

        jLabelAccountType.setText("Account Type:");

        jComboBoxAccountType.setBackground(new java.awt.Color(204, 204, 204));
        jComboBoxAccountType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Savings", "Fixed", "Current" }));
        jComboBoxAccountType.setSelectedIndex(-1);
        jComboBoxAccountType.setEnabled(false);
        jComboBoxAccountType.setFocusable(false);

        jLabelAccountID.setText("Account ID:");

        jTextFieldBalanceInPHP.setEditable(false);
        jTextFieldBalanceInPHP.setFocusable(false);

        jTextFieldAccountID.setEditable(false);
        jTextFieldAccountID.setBackground(new java.awt.Color(204, 204, 204));
        jTextFieldAccountID.setFocusable(false);

        jTextFieldClientID.setEditable(false);
        jTextFieldClientID.setBackground(new java.awt.Color(204, 204, 204));
        jTextFieldClientID.setFocusable(false);

        jTextFieldFullName.setEditable(false);
        jTextFieldFullName.setBackground(new java.awt.Color(204, 204, 204));
        jTextFieldFullName.setFocusable(false);

        jComboBoxGenderAtBirth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        jComboBoxGenderAtBirth.setSelectedIndex(-1);
        jComboBoxGenderAtBirth.setEnabled(false);

        jLabelGenderAtBirth.setText("Gender at Birth:");

        jLabelDateOfBirth.setText("Date of Birth:");

        jDateChooserDateOfBirth.setEnabled(false);

        jLabelMobileNo.setText("Mobile No.:");

        jTextFieldEmail.setBackground(new java.awt.Color(204, 204, 204));
        jTextFieldEmail.setFocusable(false);

        jLabelEmail.setText("Email:");

        jTextFieldBranch.setBackground(new java.awt.Color(204, 204, 204));
        jTextFieldBranch.setFocusable(false);

        jLabelBranch2.setText("Branch:");

        jTextFieldMobileNo.setBackground(new java.awt.Color(204, 204, 204));
        jTextFieldMobileNo.setFocusable(false);

        javax.swing.GroupLayout jPanelAddNewAccountLayout = new javax.swing.GroupLayout(jPanelAddNewAccount);
        jPanelAddNewAccount.setLayout(jPanelAddNewAccountLayout);
        jPanelAddNewAccountLayout.setHorizontalGroup(
            jPanelAddNewAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAddNewAccountLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanelAddNewAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelClientID)
                    .addComponent(jLabelGenderAtBirth)
                    .addComponent(jLabelDateOfBirth)
                    .addComponent(jLabelMobileNo)
                    .addComponent(jLabelEmail)
                    .addComponent(jLabelBranch2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelAccountType, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelBalanceInPHP)
                    .addComponent(jLabelAccountID, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelAddNewAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAddNewAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jTextFieldAccountID, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                        .addComponent(jTextFieldFullName, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextFieldClientID, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(jComboBoxGenderAtBirth, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooserDateOfBirth, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldBranch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxAccountType, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldBalanceInPHP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldMobileNo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        jPanelAddNewAccountLayout.setVerticalGroup(
            jPanelAddNewAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAddNewAccountLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanelAddNewAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAccountID)
                    .addComponent(jTextFieldAccountID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanelAddNewAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelClientID, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldClientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelAddNewAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldFullName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelAddNewAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxGenderAtBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelGenderAtBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelAddNewAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooserDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelAddNewAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldMobileNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMobileNo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelAddNewAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelAddNewAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldBranch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelBranch2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanelAddNewAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxAccountType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelAccountType, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelAddNewAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldBalanceInPHP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelAddNewAccountLayout.createSequentialGroup()
                        .addComponent(jLabelBalanceInPHP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(3, 3, 3)))
                .addContainerGap(161, Short.MAX_VALUE))
        );

        jButtonRefreshAllData.setText("Refresh Data");
        jButtonRefreshAllData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshAllDataActionPerformed(evt);
            }
        });

        jTableAccount.setAutoCreateRowSorter(true);
        jTableAccount.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTableAccount.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Account ID", "Account Owner", "Client ID", "Account Type"
            }
        )

        // make the jTable cells not editable
        {
            Class[] types = { String.class, String.class, String.class, String.class};
            boolean[] canEdit = { false, false, false, false };

            @Override
            public Class getColumnClass(int columnIndex) {
                return this.types[columnIndex];
            }

            public boolean isCellEditable(int columnIndex) {
                return this.canEdit[columnIndex];
            }
        });
        jTableAccount.setFocusable(false);
        jTableAccount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAccountMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTableAccount);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Click an account below to view its current balance and transaction history.");

        jLabelSystem3.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabelSystem3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSystem3.setText("SYSTEM");

        jLabelManagement3.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabelManagement3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelManagement3.setText("MANAGEMENT");

        jLabelBanking3.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabelBanking3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelBanking3.setText("BANKING");

        jLabelTheHBankText2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelTheHBankText2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTheHBankText2.setText("THE H BANK");

        jTableAccountTransactionLog.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTableAccountTransactionLog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Timestamp", "Amount", "Accm. Balance", "Fee"
            }
        )

        // make the jTable cells not editable
        {
            Class[] types = { String.class, String.class, String.class, String.class};
            boolean[] canEdit = { false, false, false, false};

            @Override
            public Class getColumnClass(int columnIndex) {
                return this.types[columnIndex];
            }

            public boolean isCellEditable(int columnIndex) {
                return this.canEdit[columnIndex];
            }
        });
        jTableAccountTransactionLog.setEnabled(false);
        jTableAccountTransactionLog.setFocusable(false);
        jTableAccountTransactionLog.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAccountTransactionLogMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTableAccountTransactionLog);

        jLabelAccountTransactionLog.setText("Account Transaction Log:");

        jLabelAccountTransactionLogAccountID.setText("A0001");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jPanelAddNewAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButtonRefreshAllData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabelAccountTransactionLog)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelAccountTransactionLogAccountID))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jLabelTheHBankText2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelBanking3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelManagement3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelSystem3))
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanelAddNewAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelTheHBankText2)
                            .addComponent(jLabelBanking3)
                            .addComponent(jLabelManagement3)
                            .addComponent(jLabelSystem3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelAccountTransactionLogAccountID)
                            .addComponent(jLabelAccountTransactionLog))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonRefreshAllData)
                        .addGap(19, 19, 19))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableClientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClientMouseClicked
    }//GEN-LAST:event_jTableClientMouseClicked

    private void jButtonRefreshDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshDataActionPerformed
    }//GEN-LAST:event_jButtonRefreshDataActionPerformed

    private void jTableClient1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClient1MouseClicked
    }//GEN-LAST:event_jTableClient1MouseClicked

    private void jTableAccountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAccountMouseClicked
        jTableAccountTransactionLog.setModel(
            new javax.swing.table.DefaultTableModel(new Object [][] {},
                new String [] {"Timestamp", "Amount", "Accm. Balance", "Fee"})
            {
                Class[] types = { String.class, String.class, String.class, String.class};
                boolean[] canEdit = { false, false, false, false };

                @Override
                public Class getColumnClass(int columnIndex) {
                    return this.types[columnIndex];
                }

                public boolean isCellEditable(int columnIndex) {
                    return this.canEdit[columnIndex];
                }
            }
        );

        DefaultTableModel model = (DefaultTableModel)jTableAccount.getModel();
        int rIndex = jTableAccount.convertRowIndexToModel(jTableAccount.getSelectedRow());

        String accountID = model.getValueAt(rIndex,0).toString();
        String clientID = model.getValueAt(rIndex,2).toString();

        try {
            PreparedStatement ps;
            ResultSet rs;
            String selectQuery = "SELECT * FROM accounts a, clients c WHERE c.clientID=? and a.clientID=? AND a.accountID=?";

            ps = my_connection.createConnection().prepareStatement(selectQuery);
            ps.setString(1,clientID);
            ps.setString(2,clientID);
            ps.setString(3,accountID);
            rs = ps.executeQuery();
            rs.next();

            jTextFieldAccountID.setText(accountID);
            jTextFieldClientID.setText(clientID);
            jTextFieldFullName.setText(rs.getString("lastName").trim() + ", " + rs.getString("firstName").trim() + " " + rs.getString("middleName").trim().substring(0,1) + ".");
            jComboBoxGenderAtBirth.setSelectedItem(rs.getString("genderAtBirth").trim());
            try {
                Date dateIn = new SimpleDateFormat("yyyy-MM-dd").parse(rs.getString("dateOfBirth"));
                jDateChooserDateOfBirth.setDate(dateIn);
            } catch (ParseException ex) {
                Logger.getLogger(ViewAccountBalance.class.getName()).log(Level.SEVERE, null, ex);
            }
            jTextFieldMobileNo.setText(rs.getString("mobileNo").trim());
            jTextFieldEmail.setText(rs.getString("email").trim());
            jTextFieldBranch.setText(rs.getString("branch").trim());  
            jComboBoxAccountType.setSelectedItem(rs.getString("accountType").trim());
            jTextFieldBalanceInPHP.setText(rs.getString("currentBalance").trim());
        } catch (SQLException ex) {
            Logger.getLogger(ViewAccountBalance.class.getName()).log(Level.SEVERE, null, ex);
        }

        FillAccountTransactionLogTable(jTableAccountTransactionLog, accountID, clientID);
    }//GEN-LAST:event_jTableAccountMouseClicked

    private void jTableAccountTransactionLogMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAccountTransactionLogMouseClicked
    }//GEN-LAST:event_jTableAccountTransactionLogMouseClicked

    private void jButtonRefreshAllDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshAllDataActionPerformed
        ClearFields();
        jLabelAccountTransactionLogAccountID.setText(" ");

        jTableAccount.setModel(
            new javax.swing.table.DefaultTableModel(new Object [][] {},
                new String [] {"Account ID", "Account Owner", "Client ID", "Account Type"})
            {
                Class[] types = { String.class, String.class, String.class, String.class};
                boolean[] canEdit = { false, false, false, false };

                @Override
                public Class getColumnClass(int columnIndex) {
                    return this.types[columnIndex];
                }

                public boolean isCellEditable(int columnIndex) {
                    return this.canEdit[columnIndex];
                }
            }
        );

        jTableAccountTransactionLog.setModel(
            new javax.swing.table.DefaultTableModel(new Object [][] {},
                new String [] {"Timestamp", "Amount", "Accm. Balance", "Fee"})
            {
                Class[] types = { String.class, String.class, String.class, String.class};
                boolean[] canEdit = { false, false, false, false };

                @Override
                public Class getColumnClass(int columnIndex) {
                    return this.types[columnIndex];
                }

                public boolean isCellEditable(int columnIndex) {
                    return this.canEdit[columnIndex];
                }
            }
        );

        FillAccountTable(jTableAccount);
    }//GEN-LAST:event_jButtonRefreshAllDataActionPerformed

    private void FillAccountTable(JTable jTable)
    {
        jTableAccount.setFocusable(false);
        jTableAccount.setRowSelectionAllowed(true);

        setJTableColumnsWidth(jTableAccount,210,15,100,15,50);
        setJTableColumnsWidth(jTableAccountTransactionLog,210,80,50,50,10);

        PreparedStatement ps;
        ResultSet rs;
        String selectQuery = "SELECT * FROM accounts a, clients c WHERE c.clientID=a.clientID ORDER BY a.id DESC";

        try {
            ps = my_connection.createConnection().prepareStatement(selectQuery);
            rs = ps.executeQuery();

            DefaultTableModel tableModel = (DefaultTableModel)jTable.getModel();
            Object[] row;

            while(rs.next())
            {
                row = new Object[4];
                row[0] = rs.getString("accountID");
                row[1] = rs.getString("lastName") + ", " + rs.getString("firstName") + " " + rs.getString("middleName").trim().substring(0,1) + ". ";
                row[2] = rs.getString("a.clientID");
                row[3] = rs.getString("branch");

                tableModel.addRow(row);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ViewAccountBalance.class.getName()).log(Level.SEVERE, null, ex);
          }
    }

    private void FillAccountTransactionLogTable(JTable jTable, String accountID, String clientID)
    {
        jLabelAccountTransactionLogAccountID.setText(accountID);
        jTableAccountTransactionLog.setFocusable(false);

        setJTableColumnsWidth(jTableAccountTransactionLog,210,80,50,50,10);
        
        PreparedStatement ps;
        ResultSet rs;
        String selectQuery = "SELECT a.dateCreated, a.currentBalance, a.currentBalance, 0 " +
                "FROM clients c, accounts a " +
                "WHERE a.accountID=? AND c.clientID=? " +
                "UNION " +
                "SELECT w.timestamp, w.amountWithdrawn*-1, w.newBalance, 0 " +
                "FROM clients c, withdraw w " +
                "WHERE w.accountID=? AND c.clientID=? " +
                "UNION " +
                "SELECT d.timestamp, d.amountDeposited, d.newBalance, 0 " +
                "FROM clients c, deposit d " +
                "WHERE d.accountID=? AND c.clientID=? " +
                "UNION " +
                "SELECT t.timestamp, t.amountToBeTransferred*-1, t.sourceNewBalance,t.sourceTransferFee*-1 " +
                "FROM clients c, transfer t " +
                "WHERE t.sourceAccountID=? AND c.clientID=? " +
                "UNION " +
                "SELECT t.timestamp, t.amountToBeTransferred, t.destinationNewBalance,t.destinationTransferFee*-1 " +
                "FROM clients c, transfer t " +
                "WHERE t.sourceAccountID=? AND c.clientID=? " +
                "ORDER BY dateCreated DESC;";
        

        try {
            ps = my_connection.createConnection().prepareStatement(selectQuery);
            ps.setString(1,accountID);
            ps.setString(2,clientID);
            ps.setString(3,accountID);
            ps.setString(4,clientID);
            ps.setString(5,accountID);
            ps.setString(6,clientID);
            ps.setString(7,accountID);
            ps.setString(8,clientID);
            ps.setString(9,accountID);
            ps.setString(10,clientID);
            rs = ps.executeQuery();

            DefaultTableModel tableModel = (DefaultTableModel)jTable.getModel();
            Object[] row;

            while(rs.next())
            {
                row = new Object[4];
                row[0] = rs.getTimestamp(1);

                row[1] = String.format("%.2f", rs.getDouble(2));
                row[2] = rs.getDouble(3);
                row[3] = rs.getDouble(4);

                               
                
                tableModel.addRow(row);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ViewAccountBalance.class.getName()).log(Level.SEVERE, null, ex);
          }

        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
//        TableModel tableModel = jTableAccountTransactionLog.getModel();
//        jTableAccountTransactionLog.getColumnModel().getColumn(0).setCellRenderer(rightRenderer);  
        jTableAccountTransactionLog.getColumnModel().getColumn(1).setCellRenderer(rightRenderer);  
        jTableAccountTransactionLog.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);  
        jTableAccountTransactionLog.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);  
//        jTableAccountTransactionLog.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);  
    }

    private void ClearFields()
    {
        jTextFieldAccountID.setText("");
        jTextFieldClientID.setText("");
        jTextFieldFullName.setText("");
        jComboBoxGenderAtBirth.setSelectedIndex(-1);
        jDateChooserDateOfBirth.setDate(null);
        jTextFieldMobileNo.setText("");
        jTextFieldEmail.setText("");
        jTextFieldBranch.setText("");
        jComboBoxAccountType.setSelectedIndex(-1);
        jTextFieldBalanceInPHP.setText("");
        jTextFieldBalanceInPHP.requestFocus();
    }

    public static void setJTableColumnsWidth(JTable table, int tablePreferredWidth, double... percentages)
    {
        double total = 0;
        for (int i = 0; i < table.getColumnModel().getColumnCount(); i++) {
            total += percentages[i];
        }

        for (int i = 0; i < table.getColumnModel().getColumnCount(); i++) {
            TableColumn column = table.getColumnModel().getColumn(i);
            column.setPreferredWidth((int)
                    (tablePreferredWidth * (percentages[i] / total)));
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonRefreshAllData;
    private javax.swing.JButton jButtonRefreshData;
    private javax.swing.JComboBox<String> jComboBoxAccountType;
    private javax.swing.JComboBox<String> jComboBoxGenderAtBirth;
    private com.toedter.calendar.JDateChooser jDateChooserDateOfBirth;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelAccountID;
    private javax.swing.JLabel jLabelAccountTransactionLog;
    private javax.swing.JLabel jLabelAccountTransactionLogAccountID;
    private javax.swing.JLabel jLabelAccountType;
    private javax.swing.JLabel jLabelBalanceInPHP;
    private javax.swing.JLabel jLabelBanking2;
    private javax.swing.JLabel jLabelBanking3;
    private javax.swing.JLabel jLabelBanking4;
    private javax.swing.JLabel jLabelBranch2;
    private javax.swing.JLabel jLabelClientID;
    private javax.swing.JLabel jLabelDateOfBirth;
    private javax.swing.JLabel jLabelEmail;
    private javax.swing.JLabel jLabelGenderAtBirth;
    private javax.swing.JLabel jLabelLastName;
    private javax.swing.JLabel jLabelManagement2;
    private javax.swing.JLabel jLabelManagement3;
    private javax.swing.JLabel jLabelManagement4;
    private javax.swing.JLabel jLabelMobileNo;
    private javax.swing.JLabel jLabelSystem2;
    private javax.swing.JLabel jLabelSystem3;
    private javax.swing.JLabel jLabelSystem4;
    private javax.swing.JLabel jLabelTheHBankText1;
    private javax.swing.JLabel jLabelTheHBankText2;
    private javax.swing.JLabel jLabelTheHBankText3;
    private javax.swing.JPanel jPanelAddNewAccount;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTableAccount;
    private javax.swing.JTable jTableAccountTransactionLog;
    private javax.swing.JTable jTableClient;
    private javax.swing.JTable jTableClient1;
    private javax.swing.JTextField jTextFieldAccountID;
    private javax.swing.JTextField jTextFieldBalanceInPHP;
    private javax.swing.JTextField jTextFieldBranch;
    private javax.swing.JTextField jTextFieldClientID;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldFullName;
    private javax.swing.JTextField jTextFieldMobileNo;
    // End of variables declaration//GEN-END:variables
}
